script
    curl = {
      packages: {
        'ground': {
          path: '/lib/ground/dist',
          main: 'gnd',
          lib: ''
        },
      },
      paths : {
        underscore : 'https://raw.github.com/amdjs/underscore/master/underscore-min'
      }
    };
link(href="/lib/ground/examples/list/bootstrap/css/bootstrap.min.css",rel="stylesheet",media="screen")
script(src="https://raw.github.com/cujojs/curl/master/dist/curl-kitchen-sink/curl.js")
script
  curl(['underscore'], function(_){
    curl(['ground'], function(Gnd){
      // Custom data to add in the list
      var moviesData = [{ title : 'Django Unchained',
                          genre : 'Action'},
                        { title : 'The Hobbit: An Unexpected Journey ',
                          genre : 'Adventures'},
                        { title : 'Pitch Perfect',
                          genre : 'Comedy'},
                        { title : 'Les MisÃ©rables',
                          genre : 'Drama'},
                        { title : 'John Dies at the End ',
                          genre : 'Horror',
                          title : 'Cloud Atlas',
                          genre : 'Sci-Fi'},
                        { title : 'The Dark Knight Rises',
                          genre :  'Action'}];
      // Models                 
      var Library = Gnd.Model.extend('library');
      var Movie = Gnd.Model.extend('movies');
      
      // add custom handlers to the library
      var library = new Library({
        filterByActionHandler : function( node , evt ){
          this.movies.set('filterFn', function(item){
            return item.genre == 'Action';
          })
        },
        showAllHandler : function( node , evt ){
          library.movies.set('filterFn',function(item){
            return true;
          });
        },
        sortTitleHandler : function( node , evt ){
          library.movies.set('sortByFn',function(item){
            return item.title.toLowerCase();
          })
          if(library.movies.sortOrder == 'desc') {
            library.movies.sortOrder = 'asc';
          } else {
            library.movies.sortOrder = 'desc';
          }
        },
        inputSearchHandler : function( node , evt ){
          library.movies.set('filterFn', function(item){
            var title = item.title.toLowerCase();
            var search = node.value.toLowerCase();
            return title.search( search ) >= 0
          })
        },
        addMovieHandler : function( node , evt ){
          var name = Gnd.$$('#name')
          var genre = Gnd.$$('#genre')
          var movie = new Movie( { 
            title:name.value,
            genre:genre.value,
            removeHandler:function(){
              library.movies.remove(this.id())
            }
          })
          library.movies.add(movie)
          name.value = '';
          genre.value = '';
        }
      });
      
      // Create all model movies with a custom handler
      var movies = [];
      _.each(moviesData , function(data){
        movies.push(new Movie(_.extend(data, { removeHandler : function(){
                library.movies.remove(this.id());
              }
            })
          )
        );
      })

      // Create and add the collection to the library
      library.movies = new Gnd.Collection(Movie, library, movies);
      
      // bind the collection to the HMTL
      var viewModel = new Gnd.ViewModel(document.getElementById('myLibrary'), {list: library});
    })
  })
div(class="container")
  div(class="row")
    h2 List Example
    p This example shows a custom ground view
    div(id="myLibrary")
      div 
        input(data-event="keyup: list.inputSearchHandler",class="inputSearch",type="text",placeholder="Search movies")
      button(data-event="click: list.sortTitleHandler", class="sortTitle btn") Sort by title
      button(data-event="click: list.showAllHandler", class="showAll btn" ,style="margin: 0px 6px;") Show All
      button(data-event="click: list.filterByActionHandler", class="showAction btn") Show Action
      table(class="table table-condensed", style="margin-top: 16px; color: #f2f2f2;")
        thead
          tr
            th Title
            th Genre
            th Action
        tbody
          tr(data-each="list.movies : movie")
            td
              span(data-bind="text: movie.title")
            td
              span(data-bind="text: movie.genre")
            td
              i(style="margin-left: 16px;cursor:pointer;",class="icon-remove icon-white",data-event="click: movie.removeHandler")
          tr
            td(style="padding-top: 20px;")
              input(type="text",id="name",placeholder="Name")
            td(style="padding-top: 20px;")
              input(type="text",id="genre",placeholder="Genre")
            td(style="padding-top: 20px;")
              button(data-event="click: list.addMovieHandler",class="addNew btn") Add