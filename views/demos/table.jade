
script
    curl = {
      packages: {
        'ground': {
          path: '/lib/ground/dist',
          main: 'gnd',
          lib: ''
        },
      },
      paths : {
        underscore : 'https://raw.github.com/amdjs/underscore/master/underscore-min'
      }
    };
link(href="/lib/ground/examples/list/bootstrap/css/bootstrap.min.css",rel="stylesheet",media="screen")
script(src="https://raw.github.com/cujojs/curl/master/dist/curl-kitchen-sink/curl.js")
script(id="demo-list-js")
  curl(['underscore'], function(_){
    curl(['ground'], function(Gnd){
      // Custom data to add in the list
      var moviesData = [
                        { title : 'Django Unchained',
                          genre : 'Action'},
                        { title : 'The Hobbit: An Unexpected Journey ',
                          genre : 'Adventures'},
                        { title : 'Pitch Perfect',
                          genre : 'Comedy'},
                        { title : 'Les Mis√©rables',
                          genre : 'Drama'},
                        { title : 'John Dies at the End ',
                          genre : 'Horror'},
                        { title : 'Cloud Atlas',
                          genre : 'Sci-Fi'},
                        { title : 'The Dark Knight Rises',
                          genre :  'Action'}];
      // Models                 
      var Library = Gnd.Model.extend('library');
      var Movie = Gnd.Model.extend('movies');
      
      // add custom handlers to the library
      var library = new Library({
        filterByGenreHandler : function(node,evt){
          var genre = node.dataset.genre;
          this.movies.set('filterFn', function(item){
            return item.genre == genre;
          })
        },
        showAllHandler : function(node,evt){
          library.movies.set('filterFn',function(item){
            return true;
          });
        },
        sortHandler : function(node,evt){
          var field = node.dataset.field;
          library.movies.set('sortByFn',function(item){
            return item[field].toLowerCase();
          })
          if(library.movies.sortOrder == 'desc') {
            library.movies.sortOrder = 'asc';
          } else {
            library.movies.sortOrder = 'desc';
          }
        },
        inputSearchHandler : function(node,evt){
          library.movies.set('filterFn', function(item){
            return Gnd.Util.searchFilter(item,node.value.toLowerCase(),['title'])
          })
        },
        addMovieHandler : function(node,evt){
          var name = Gnd.$('#name')[0];
          var genre = Gnd.$('#genre')[0];
          var movie = new Movie( { 
            title:name.value,
            genre:genre.value,
            removeHandler:function(){
              library.movies.remove(this.id())
            }
          })
          library.movies.add(movie)
          name.value = '';
          genre.value = '';
        }
      });
      
      // Create all model movies with a custom handler
      var movies = [];
      _.each(moviesData , function(data){
        movies.push(new Movie(_.extend(data,{removeHandler:function(){
                library.movies.remove(this.id());
              }
            })
          )
        );
      })

      // Create and add the collection to the library
      library.movies = new Gnd.Collection(Movie, library, movies);
      
      // bind the collection to the HMTL
      var viewModel = new Gnd.ViewModel(document.getElementById('myLibrary'), {list:library},{
        escapeFn: function(text){
          return _.escape(text);
          }
        }
      );
    })
  })
script
  $(function(){
    $('#code-example').text($('#demo-list-js').text()); // Add javascript code preview
    $('#code-example-html').text($.trim($('#myLibrary').html())); // Add html code preview
    //$('.barcontent').html('<ul style="margin:auto"><li style="width: 100%;text-align: center;margin: 0px;"><a href="/">Return to Ground.io</a></li></ul>'); // Fill the empty menubar
  })
h1 Table Example
div(class="container")
  div(class="row")
    p This example shows a ViewModel working with table
    div(id="myLibrary")
      div 
        input(data-event="keyup: list.inputSearchHandler",class="inputSearch",type="text",placeholder="Search...")
      button(data-event="click: list.showAllHandler", class="showAll btn") Show All
      p(style="margin-top: 8px;")
        button(data-event="click: list.filterByGenreHandler", data-genre="Action", class="showAction btn btn-small ") Show Action
        button(data-event="click: list.filterByGenreHandler", data-genre="Horror", class="showAction btn btn-small ") Show Horror
        button(data-event="click: list.filterByGenreHandler", data-genre="Comedy", class="showAction btn btn-small ") Show Comedy
        button(data-event="click: list.filterByGenreHandler", data-genre="Drama", class="showAction btn btn-small ") Show Drama
        button(data-event="click: list.filterByGenreHandler", data-genre="Sci-Fi", class="showAction btn btn-small ") Show Sci-Fi
      table(class="table table-condensed", style="margin-top: 16px; color: #f2f2f2;")
        thead
          tr
            th(data-field="title",data-event="click: list.sortHandler") Title
            th(data-field="genre",data-event="click: list.sortHandler") Genre
            th Action
        tbody
          tr(data-each="list.movies : movie")
            td
              span(data-bind="text: movie.title | escapeFn")
            td
              span(data-bind="text: movie.genre | escapeFn")
            td
              i(style="margin-left: 16px;cursor:pointer;",class="icon-remove icon-white",data-event="click: movie.removeHandler")
          tr
            td(style="padding-top: 20px;")
              input(type="text",id="name",placeholder="Name")
            td(style="padding-top: 20px;")
              input(type="text",id="genre",placeholder="Genre")
            td(style="padding-top: 20px;")
              button(data-event="click: list.addMovieHandler",class="addNew btn") Add
h1(style="padding-bottom: 0px;margin-top: 36px;") Javascript code
p This is where we set the logic of the application.
pre
  code(class="javascript",id="code-example")
h1 Html
p This is where we set the html estructure and the bindings.
pre
  code(class="xml",id="code-example-html")